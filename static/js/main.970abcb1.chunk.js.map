{"version":3,"sources":["input.js","App.js","reportWebVitals.js","index.js"],"names":["FormOutput","className","this","props","arr","map","value","index","Name","Department","Rating","id","onClick","updateComponent","Component","Form","state","showComponent","updateName","$event","target","setState","updateDepartment","updateRating","e","preventDefault","userDetails","updateDetails","push","console","log","type","name","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAsCeA,E,4JAnBT,WACE,OACE,gCACM,wDACJ,qBAAKC,UAAU,aAAf,SAECC,KAAKC,MAAMC,IAAIC,KAAI,SAACC,EAAMC,GACzB,OAAO,sBAAKN,UAAU,UAAyBM,MAAOA,EAA/C,oBACDD,EAAME,KADL,iBACyBF,EAAMG,WAD/B,aACqDH,EAAMI,SAD7BH,EAAMI,SAM/C,wBAAQV,UAAU,MAAMW,QAASV,KAAKC,MAAMU,gBAA5C,4B,GAdeC,aCqDVC,E,4MAlEbC,MAAM,CACJC,eAAc,EACdb,IAAI,GACJI,KAAK,GACLC,WAAW,GACXC,OAAQ,I,EAEVQ,WAAW,SAACC,GACV,IAAMD,EAAWC,EAAOC,OAAOd,MAC/B,EAAKe,SAAS,CAACb,KAAKU,K,EAEtBI,iBAAiB,SAACH,GAChB,IAAMG,EAAiBH,EAAOC,OAAOd,MACrC,EAAKe,SAAS,CAACZ,WAAWa,K,EAE5BC,aAAa,SAACJ,GACZ,IAAMI,EAAaJ,EAAOC,OAAOd,MACjC,EAAKe,SAAS,CAACX,OAAOa,K,EAExBnB,IAAI,SAACoB,GACHA,EAAEC,iBACF,IAAMC,EAAY,CAChBlB,KAAK,EAAKQ,MAAMR,KAChBC,WAAW,EAAKO,MAAMP,WACtBC,OAAQ,EAAKM,MAAMN,QAErB,EAAKW,SAAS,CAACb,KAAK,GAAGC,WAAW,GAAGC,OAAO,KAC5C,IAAMiB,EAAc,YAAI,EAAKX,MAAMZ,KACnCuB,EAAcC,KAAKF,GACnB,EAAKL,SAAS,CAACjB,IAAIuB,IACnB,EAAKN,SAAS,CAACJ,eAAc,K,EAE/BJ,gBAAgB,WACd,EAAKQ,SAAS,CAACJ,eAAe,EAAKD,MAAMC,iB,4CAG3C,WAGE,OADAY,QAAQC,IAAI5B,KAAKgB,YAEf,iCAEKhB,KAAKc,MAAMC,cACd,cAAC,EAAD,CAAYb,IAAKF,KAAKc,MAAMZ,IAAKS,gBAAiBX,KAAKW,kBAEvD,sBAAKZ,UAAU,OAAf,UACA,wDACA,yCACE,uBAAO8B,KAAK,OAAOC,KAAK,OAAO1B,MAAOJ,KAAKc,MAAMR,KAAMP,UAAU,aAAagC,SAAU/B,KAAKgB,gBAC/F,uBACA,+CACE,uBAAOa,KAAK,OAAOC,KAAK,aAAa1B,MAAOJ,KAAKc,MAAMP,WAAYR,UAAU,aAAagC,SAAU/B,KAAKoB,sBAC3G,uBACA,2CACE,uBAAOS,KAAK,OAAOC,KAAK,SAAS1B,MAAOJ,KAAKc,MAAMN,OAAQT,UAAU,aAAagC,SAAU/B,KAAKqB,kBACnG,uBAAK,uBACL,wBAAQX,QAASV,KAAKE,IAAtB,oBACA,qBAAKH,UAAU,uB,GA1DJa,aCQJoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.970abcb1.chunk.js","sourcesContent":["import {Component} from 'react';\r\nimport './App.css';\r\n\r\n// function Input(props){\r\n//         return(\r\n//             <div>\r\n//                 <h1>EMPLOYEE FEEDBACK DATA</h1>\r\n//             <div className='placeInput'>\r\n//             <div className='flexBox'>  \r\n//               Name:{props.index.Name} | Department:{props.index.Department} | Rating:{props.index.Rating}\r\n//             </div>\r\n//           </div>\r\n          \r\n//               <button className='btn' onClick={this.props.updateComponent}>Go Back</button>\r\n              \r\n//           </div>\r\n//         );\r\n//     }\r\nclass FormOutput extends Component {\r\n      render() {\r\n        return (\r\n          <div>\r\n                <h1>EMPLOYEE FEEDBACK DATA</h1>\r\n            <div className='placeInput'>\r\n          \r\n            {this.props.arr.map((value,index) => {\r\n              return <div className='flexBox' key={index.id} index={index} >;\r\n              Name:{value.Name} | Department:{value.Department} | Rating:{value.Rating}\r\n              </div>\r\n            })}\r\n          </div>\r\n          \r\n          <button className='btn' onClick={this.props.updateComponent}>Go Back</button>\r\n          \r\n      </div>\r\n        );\r\n      }\r\n    }\r\nexport default FormOutput;","import './App.css';\nimport {Component} from 'react';\nimport FormOutput from './input';\n\nclass Form extends Component{\n  state={\n    showComponent:false,\n    arr:[],\n    Name:[],\n    Department:[],\n    Rating: [],\n  };\n  updateName=($event)=>{\n    const updateName=$event.target.value;\n    this.setState({Name:updateName});\n  };\n  updateDepartment=($event)=>{\n    const updateDepartment=$event.target.value;\n    this.setState({Department:updateDepartment});\n  };\n  updateRating=($event)=>{\n    const updateRating=$event.target.value;\n    this.setState({Rating:updateRating});\n  };\n  arr=(e)=>{\n    e.preventDefault();\n    const userDetails={\n      Name:this.state.Name,\n      Department:this.state.Department,\n      Rating: this.state.Rating,\n    };\n    this.setState({Name:'',Department:'',Rating:''});\n    const updateDetails=[...this.state.arr];\n    updateDetails.push(userDetails);\n    this.setState({arr:updateDetails});\n    this.setState({showComponent:true});\n  }\n  updateComponent=()=>{\n    this.setState({showComponent:!this.state.showComponent});\n  }\n\n  render(){\n    \n    console.log(this.updateName);\n    return(\n      <center>\n        \n          {this.state.showComponent ?\n        <FormOutput arr={this.state.arr} updateComponent={this.updateComponent}></FormOutput>\n        :\n        <div className='main'>\n        <h1>EMPLOYEE FEEDBACK FORM</h1>\n        <div>Name : \n          <input type='text' name='Name' value={this.state.Name} className='inputField' onChange={this.updateName}></input></div>\n        <br/>\n        <div>Department : \n          <input type='text' name='Department' value={this.state.Department} className='inputField' onChange={this.updateDepartment}></input></div>\n        <br/>\n        <div>Rating : \n          <input type='text' name='Rating' value={this.state.Rating} className='inputField' onChange={this.updateRating}></input></div>\n        <br/><br/>\n        <button onClick={this.arr}>Submit</button>\n        <div className='container'></div>\n      </div>}\n     \n          \n      </center>\n    );\n  }\n}\n\nexport default Form;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}